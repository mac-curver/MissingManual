////  ScientificView.h//  Oscilloscope////  Created by Heinz-Jšrg on Sun Jun 1 2003.//  Copyright (c) 2003 Heinz-Jšrg SCHR…DER. All rights reserved.////	Version 1.30: 28.12.2004		all double replaced by float!#import		<Cocoa/Cocoa.h>#import		"MyDocument.h"							//please remove this@class ImageAxis;									// should be replaced by HorizontalImageAxis and VerticalImageAxis%%%%%@class HorizontalImageAxis;	@class VerticalImageAxis;	// mouse cursor statesenum {	arrowState, handState, handClosedState, plusState, minusState, zoomTopRightState, zoomTopLeftState, zoomBottomRightState, zoomBottomLeftState};// text position constants gives text vs point position enum {	topLeft = 1,			//	topCenter,				// (bottom right)     (bottom center)     (bottom left)	topRight,				//         *******   *******   *    *   *******	left,					//            *      *          *  *       *	center,					//   (right)  *      **** (center)*		   *  (left)	right,					//            *      *          *  *	   *	bottomLeft,				//            *		 *******   *    *      *	bottomCenter,			//  (top right)	       (top center)         (top left)	bottomRight				//};@interface ScientificImage : NSImageView{    IBOutlet HorizontalImageAxis	*horizontalAxis;    IBOutlet VerticalImageAxis		*secondaryAxis;    IBOutlet VerticalImageAxis		*verticalAxis;	NSRect				viewRect;					// rect inside view where drawing takes place in global coordinates    NSRect				windowRect;					// maximum window in user coordinates 													// offset to origin													// width = 1/xScale, height = 1/yScale    NSRect				secondaryRect;				// secondary window in user coordinates    NSRect				*currentRect;				// either windowRect or secondaryRect	float				x_scale;	float				x_offset;	float				y_scale;	float				y_offset;	NSInteger					currentState;				// state: zoom-in, zoom-out, drag, etc	NSRect				rubberbandRect;				// for the selection	BOOL				penIsDown;					// for plot statement to indicate penstate	float				symbolSize;					// half of centered symbol size	NSPoint				cursorPosition;				// last point drawn	NSTrackingRectTag	trackingTag;				// for the mouse move (setBounds)    NSMutableDictionary *attrs;}- (IBAction)zoomIn:(id)sender;- (IBAction)zoomOut:(id)sender;- (void)	zoomInFromPoint:(NSPoint)mouseLoc;- (void)	zoomOutFromPoint:(NSPoint)mouseLoc;- (void)	zoomInToRect:(NSRect)mouseRect;- (void)	windowFromX:(float)xmin ToX:(float)xmax AndFromY:(float)ymin ToY:(float)ymax;- (void)	secondaryFromX:(float)xmin ToX:(float)xmax AndFromY:(float)ymin ToY:(float)ymax;- (void)	secondaryFromX:(float)xmin ToX:(float)xmax;- (void)	choosePrimary;- (void)	chooseSecondary;- (void)	choosePrimaryNew;- (void)	chooseSecondaryNew;- (void)	setViewRectToBounds;- (void)	setViewRect:(NSRect)myRect;- (NSRect)	viewRect;- (void)	calcScaling;- (float)	minX;									// returns minimum x-value- (float)	maxX;									// returns maximum x-value- (NSRect)	windowRect;								// first window in user coordinates - (NSRect)	secondaryRect;							// secondary window in user coordinates- (void)	setWindowRect:(NSRect)newRect;			// first window in user coordinates - (void)	setSecondaryRect:(NSRect)newRect;		// secondary window in user coordinates- (void)	penup;- (void)	pendown;- (void)	lineWidth:(float)width;- (void)	move:(float)dx :(float)dy;				// move relative- (void)	moveto:(float)x :(float)y;				// move absolute- (void)	draw:(float)dx :(float)dy;				// draw relative- (void)	drawto:(float)x :(float)y;				// draw absolute- (void)	plot:(float)dx :(float)dy;				// plot relative - (void)	plotto:(float)x :(float)y;				// plot absolute- (void)	plotData:(float*)buffer startIndex:(NSUInteger)index length:(NSUInteger)length				from:(double)xStart to:(double)xStop;- (void)	setColor:(NSColor *)newColor;			// set color for following outputs- (void)	drawString:(NSString *)markString 				alignment:(NSInteger)textAlignment;		// draw string at cursor position- (void)	setSymbolSize:(NSInteger)newSymbolSize;		// set symbol size- (void)	drawTriangleSymbol:(NSInteger)symbolDirection;// small triangle- (void)	drawCenteredSymbol:(NSInteger)symbolCode;		// draw a oval, glyph or rectangle- (void)	setMyCursor:(NSInteger)state;					// set new state@end