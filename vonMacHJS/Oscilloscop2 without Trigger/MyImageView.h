////  MyImageView.h//  Oscilloscope////  Created by Heinz-Jšrg on Sun Jun 1 2003.//  Copyright (c) 2003 Heinz-Jšrg SCHR…DER. All rights reserved.////	Version 1.30: 28.12.2004		all double replaced by float!#import <Cocoa/Cocoa.h>#import "SoundInputGrabber.h"@class		MyDocument;@interface MyImageView : ScientificImage{    IBOutlet MyDocument			*myDocument;    IBOutlet NSTextField		*alphaText;    IBOutlet NSTextField		*compositeModeText;    IBOutlet NSTextField		*densityText;    IBOutlet NSTextField		*timeText;    IBOutlet NSTextField		*triggerLevelText;    IBOutlet NSTextField		*triggerPositionText;	IBOutlet NSSlider			*timingSlider;	IBOutlet NSMatrix			*triggerMatrix;	IBOutlet NSMatrix			*yOffsetMatrix;	IBOutlet NSMatrix			*yScaleMatrix;	IBOutlet NSMatrix			*channelMatrix;    IBOutlet NSTextField		*whiteText;	IBOutlet NSPopUpButton		*remanenzPopUpButton;	IBOutlet NSTextField		*test;	IBOutlet NSButton			*histogram;	IBOutlet NSButton			*continousButton;	IBOutlet NSButton			*audio;	IBOutlet NSButton			*risingEdge;	IBOutlet NSColorWell		*colorChannel0;	IBOutlet NSColorWell		*colorChannel1;	IBOutlet NSColorWell		*colorChannel2;	IBOutlet NSColorWell		*colorChannel3;	IBOutlet NSColorWell		*colorWellGrid;	IBOutlet NSColorWell		*colorWellBckgnd;	IBOutlet NSColorWell		*colorWellCursor;	IBOutlet NSColorWell		*colorWellSpecial;	NSSize						mySize;	NSImage						*currentImage;				//  actual image	NSImage						*gridImage;					//  image from grid	    NSTimer 					*repeatTimer;				// timer that controls how often we draw	double						myAlpha;	double						myDensity;	int							myCompositeMode;	double						samplingPeriod;	int							overPrint;	int							state;	Boolean						isRisingEdge;	unsigned					oneRowCount;	int							triggerChannel;				// 0...3 which channel to trigger on    double						xStart;	double						xStop;	float						yOffsetArray[4];	float						yScaleArray[4];	Boolean						initiated;    SoundInputGrabber			*grabber;	Boolean						displayIsRunning;	Boolean						channelDisplay[4];	NSColor						*colorChannel[4];	NSColor						*colorM0;	NSColor						*colorM1;	NSColor						*colorM2;	NSColor						*colorM3;	NSColor						*colorGrid;	NSColor						*colorBckgnd;	NSColor						*colorCursor;	NSColor						*colorSpecial;}- (IBAction)			drawHistogram:(id)sender;- (IBAction)			changeStart:(id)sender;- (IBAction)			doAudio:(id)sender;- (void)				stopAudio;- (IBAction)			doTrigger:(id)sender;- (IBAction)			changeRisingEdge:(id)sender;- (IBAction)			changeTriggerChannel:(id)sender;- (IBAction)			changeTriggerLevel:(id)sender;- (IBAction)			changeTriggerPosition:(id)sender;- (IBAction)			changeTriggerMode:(id)sender;- (IBAction)			changeTiming:(id)sender;- (IBAction)			changeOffsetMatrix:(id)sender;- (IBAction)			changeScaleMatrix:(id)sender;- (IBAction)			changeChannel:(id)sender;- (IBAction)			changeRemanenz:(id)sender;- (IBAction)			colorChannel0:(id)sender;- (IBAction)			colorChannel1:(id)sender;- (IBAction)			colorChannel2:(id)sender;- (IBAction)			colorChannel3:(id)sender;- (IBAction)			colorM0:(id)sender;- (IBAction)			colorM1:(id)sender;- (IBAction)			colorM2:(id)sender;- (IBAction)			colorM3:(id)sender;- (IBAction)			colorGrid:(id)sender;- (IBAction)			colorBckgnd:(id)sender;- (IBAction)			colorCursor:(id)sender;- (IBAction)			colorSpecial:(id)sender;- (void)				enableChannel:(int)channel enabled:(Boolean)enabled;- (void)				drawAxis;- (void)				setTimerRunning:(BOOL)run;- (void)				sizeDidChange:(NSNotification *)notification;- (void)				drawAnother:(id)timer;- (unsigned)			nextTrigger;- (void)				drawFloatBuffer;@end